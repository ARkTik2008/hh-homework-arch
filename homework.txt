> представим, что у нас есть данные, которые мы очень часто читаем по сравнению с другими(например словарь стран). Как можно это оптимизировать?

1. Если данные лежат в БД, то можем построить индекс по запрашиваемым полям -  ускорит выдачу данных
2. Если есть понимание, что данные меняются редко (тот же словарь стран) - можно на старте приложения единоразово вычитывать данные из места хранения (БД/Текстовые файлы/запросом в другой сервис) - и хранить их в памяти приложения. А далее обновлять их по крону/по команде от другого сервиса
3. Можно вычитывать данные не на старте приложения, а в процессе - и держать их в кэше в течение какого-то время. Кэш протухает - запрашиваем заново   

> Что можно сделать, если таблица вакансий стала слишком большой? Какие есть решения на уровне текущей базы данных? Можно ли ее чем то заменить?

1. Провести анализ - возможно, БД не соответствует третьей нормальной форме и какие-то данные вынести в отдельные таблицы - сэкономим место
2. Пересмотреть индексы - возможно, какие-то ненужны. Удалим - освободим себе место
3. На уровне логики внедрить сжатие давно неиспользуемых (архивных) вакансий. Например, каждую ночь запускается скрипт, который сжимает данные этих вакансий + проставляет соответствующий флаг. Если вакансия будет запрошена - налету разожмем. Экономим место
4.  Пересмотреть типы полей (например, хранить булевы значения в Boolean, а не в Int) - сэкономим место
5. Возможно, можно шардировать данные

> Какие вы видите узкие места, возможно неправильно выбранные технологии в текущей схеме(можно рассмотреть как “нашу” схему, так и схему настоящего hh.ru)

- Единственное, что пришло в голову - объединить сервисы logic-jlogic - будет единая точка входа + поддерживать, вероятно, станет легче
И перед logic-jlogic поставил бы еще один балансировщик - таким образом сможем равномерно распределять нагрузку по инстансам